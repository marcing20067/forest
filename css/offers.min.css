.bar{display:flex;background-size:cover;justify-content:center;align-items:center;width:100%;height:400px;background-image:linear-gradient(45deg,rgba(0,0,0,.6),rgba(0,0,0,.6)),url(../img/conifer-mobile.jpg);background-position:50%}.bar__text{padding:2.2rem;color:#fff;border:2px solid;text-align:center;font-size:2.5rem}.bar__text strong{font-weight:500}@media (min-width:768px){.bar{background-image:linear-gradient(45deg,rgba(0,0,0,.6),rgba(0,0,0,.6)),url(../img/conifer.jpg)}.bar__text{padding:3.5rem 1rem;width:100%;font-size:4.5rem}}.wrapper-bigger,.wrapper-smaller{margin:0 auto;width:80%;max-width:1300px}.section-padding{padding:7rem 0}.title{text-transform:uppercase;font-weight:400;text-align:center;margin-bottom:2.5rem}.button{position:relative;z-index:0;display:block;padding:1rem 6rem;width:-moz-fit-content;width:fit-content;border-radius:10px;overflow:hidden;border:none;background-color:#fff;color:rgba(0,0,0,.6);box-shadow:0 4px 4px 0 rgba(0,0,0,.6);text-decoration:none;font-size:2rem;cursor:pointer}.button--neon{background-color:#2cdc74;box-shadow:1px 4px 4px 0 rgba(44,220,116,.6);color:#000}.button--dark-green{background-color:#23ac5c;color:#fff}.button:after{content:"";position:absolute;z-index:-1;top:0;left:0;width:100%;height:100%;transform:scaleX(0);transform-origin:right;transition:transform .3s;background-color:rgba(0,0,0,.2);border-radius:10px}.button:hover:after{transform:scaleX(1);transform-origin:left}.column-center{display:flex;align-items:center;flex-direction:column}.content{flex:1 0 auto}@media (min-width:768px){.wrapper-smaller{width:70%;max-width:950px}.title{font-size:3.8rem;margin-bottom:4rem}}@media (min-width:1024px){.wrapper-smaller{width:60%}}body,html{height:100%}html{font-size:62.5%;scroll-behavior:smooth;scroll-padding:7rem}body{font-size:2rem;font-family:Raleway,sans-serif;display:flex;flex-direction:column}*,:after,:before{margin:0;padding:0;box-sizing:border-box}.nav{position:fixed;z-index:100;top:0;left:0;height:5.9rem}.nav,.nav__box{width:100%}.nav__logo{display:none}.nav__list{position:fixed;z-index:100;left:100%;display:flex;flex-direction:column;justify-content:center;height:calc(100vh - 5.9rem);width:100%;background-color:#fff;list-style:none;transition:transform .7s}@media (max-width:1024px){.nav__list--active{transform:translateX(-100%)}}.nav__list-item-link{height:auto;text-align:center;color:#000;text-decoration:none;display:block;padding:3.5rem 0;width:100%;transition:color .2s,background-color .2s}.nav__list-item-link:hover{color:#fff;background-color:#000}.container{display:flex;justify-content:flex-end;align-items:center;width:100%;background-color:#fff;border-bottom:1px solid gray}.nav-margin{display:block;height:5.9rem;width:100%}@media (min-width:1024px){.nav{height:auto;background-color:#fff;border-bottom:1px solid gray}.nav__box{display:flex;justify-content:space-between;align-items:center;width:80%}.nav__logo{display:block}.nav__logo-link{text-decoration:none;color:#000;font-size:3.5rem}.nav__logo-link img{height:3.5rem;vertical-align:-5px;margin-right:.3rem}.nav__list{position:static;width:auto;height:auto;flex-direction:row;transition:none}.nav__list-item-link{width:12rem}.container{display:none}.nav-margin{display:block;height:9.3rem;width:100%}}@media (max-width:1024px){.block-scroll{overflow:hidden}}.footer{background-color:#f4f4f4;flex-shrink:0}.footer__heading{display:block;margin-bottom:1.5rem;font-size:3.5rem;text-align:center}.footer__heading img{height:3.5rem;vertical-align:-5px;margin-right:.3rem}.footer__box-text{margin-bottom:1.2rem;color:#000;font-size:2.2rem;font-weight:700}.footer__box-list{margin-bottom:3rem;list-style:none;line-height:125%}.footer__box-list-item{margin-bottom:1.5rem}.footer__box-list-item:last-of-type{margin-bottom:0}.footer__box-list-item-link{font-size:1.6rem;color:#000;text-decoration:none;opacity:.8;transition:opacity .3s}.footer__box-list-item-link:hover{opacity:1}.footer__box:last-of-type .footer__box-list{margin:0}.footer__end{padding:3rem .5rem;width:100%;text-align:center;border-top:1px solid}@media (min-width:650px){.footer__heading{margin:0 auto;margin-bottom:2rem}.footer__container{display:flex;justify-content:space-between;width:100%}}@media (min-width:1200px){.footer__wrapper{display:flex;justify-content:space-between}.footer__heading{margin:0;width:-moz-fit-content;width:fit-content}.footer__box-list{margin:0}.footer__box:nth-of-type(2n){margin:0 8rem}.footer__container{width:-moz-fit-content;width:fit-content}}.card{display:flex;flex-direction:column;align-items:center;padding:2rem 3rem;border-radius:5px;box-shadow:0 0 8px 0 rgba(0,0,0,.2)}.card:nth-of-type(2){margin:3rem 0}.card__price{margin:1rem 0;font-size:5rem;font-weight:700}.card__list{list-style-type:none}.card__list-item--has:before{content:url(../img/icons/tabler-icon-check.svg);margin-right:.5rem}.card__list-item--no-has{opacity:.6}.card__list-item--no-has:before{content:url(../img/icons/tabler-icon-minus.svg);margin-right:.5rem}.card__button{margin-top:2rem}.h1{padding:7rem;font-weight:700;margin:0}.about-offer{background-position:50%;background-size:cover;background-image:linear-gradient(45deg,rgba(0,0,0,.8),rgba(0,0,0,.8)),url(../img/leaves-mobile.jpg);color:#fff}.about-offer__text{line-height:135%}.why-we__box{margin-bottom:2rem}.why-we__box:last-of-type{margin-bottom:0}.why-we__box-text{font-weight:700}.why-we__box-img{width:7rem;margin-bottom:.5rem}.offer__text{margin-bottom:4rem;text-align:center}.card{margin-bottom:7rem;padding:3rem 4rem}.card:last-of-type{margin-bottom:0}@media (min-width:768px){.why-we__container{flex-direction:row;justify-content:space-between}.h1{font-size:3em}.about-offer{background-image:linear-gradient(45deg,rgba(0,0,0,.8),rgba(0,0,0,.8)),url(../img/leaves.jpg)}.nav__box{width:100%}}@media (min-width:1024px){.offer__box{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:space-around}.offer__card{width:-moz-fit-content;width:fit-content}.nav__box{width:80%}}@media (min-width:1380px){.offer__box{display:grid;grid-template-columns:repeat(3,1fr);grid-template-rows:repeat(3,1fr);gap:4rem}.card{margin:0}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9iYXIuc2NzcyIsIm9mZmVycy5jc3MiLCJfY29tcG9uZW50cy5zY3NzIiwiX2NvbG9ycy5zY3NzIiwiX3Jlc2V0LnNjc3MiLCJfbmF2LnNjc3MiLCJfZm9vdGVyLnNjc3MiLCJfY2FyZC5zY3NzIiwib2ZmZXJzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEsS0FDSSxhQUFBLEFBQ0Esc0JBQUEsQUFDQSx1QkFBQSxBQUNBLG1CQUFBLEFBQ0EsV0FBQSxBQUNBLGFBQUEsQUFDQSxxR0FBQSxBQUNBLHVCQUFBLENDSEosQURLSSxXQUNJLGVBQUEsQUFDQSxXQUFBLEFBQ0EsaUJBQUEsQUFDQSxrQkFBQSxBQUVBLGdCQUFBLENDSlIsQURNUSxrQkFDSSxlQUFBLENDSlosQURVQSx5QkFDSSxLQUNJLDZGQUFBLENDUE4sQURTTSxXQUNJLG9CQUFBLEFBQ0EsV0FBQSxBQUNBLGdCQUFBLENDUFYsQ0FDRixBQzVCQSxpQ0FFSSxjQUFBLEFBQ0EsVUFBQSxBQUNBLGdCQUFBLENEOEJKLEFDM0JBLGlCQUNJLGNBQUEsQ0Q4QkosQUMzQkEsT0FDSSx5QkFBQSxBQUNBLGdCQUFBLEFBQ0Esa0JBQUEsQUFDQSxvQkFBQSxDRDhCSixBQzNCQSxRQUNJLGtCQUFBLEFBQ0EsVUFBQSxBQUNBLGNBQUEsQUFDQSxrQkFBQSxBQUNBLHVCQUFBLGtCQUFBLEFBQ0EsbUJBQUEsQUFDQSxnQkFBQSxBQUNBLFlBQUEsQUFDQSxzQkM3QkksQUQ4QkoscUJBQUEsQUFDQSxzQ0FBQSxBQUNBLHFCQUFBLEFBQ0EsZUFBQSxBQUNBLGNBQUEsQ0Q4QkosQUM1QkksY0FDSSx5QkNuQ0EsQURvQ0EsNkNBQUEsQUFDQSxVQUFBLENEOEJSLEFDM0JJLG9CQUNJLHlCQ3hDTyxBRHlDUCxVQzVDQSxDRnlFUixBQzFCSSxjQUNJLFdBQUEsQUFDQSxrQkFBQSxBQUNBLFdBQUEsQUFDQSxNQUFBLEFBQ0EsT0FBQSxBQUNBLFdBQUEsQUFDQSxZQUFBLEFBQ0Esb0JBQUEsQUFDQSx1QkFB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SUFDSSxhQUFBLENQOFZOLEFPM1ZFLGFBQ0ksNEZBQUEsQ1A2Vk4sQU8xVkUsVUFDSSxVQUFBLENQNFZOLENBQ0YsQU96VkEsMEJBRVEsWUFDSSxhQUFBLEFBQ0EsbUJBQUEsQUFDQSxlQUFBLEFBQ0EsNEJBQUEsQ1AwVlYsQU92Vk0sYUFDSSx1QkFBQSxpQkFBQSxDUHlWVixBT3JWRSxVQUNJLFNBQUEsQ1B1Vk4sQ0FDRixBT3BWQSwwQkFFUSxZQUNJLGFBQUEsQUFDQSxvQ0FBQSxBQUNBLGlDQUFBLEFBQ0EsUUFBQSxDUHFWVixBT2pWRSxNQUNJLFFBQUEsQ1BtVk4sQ0FDRiIsImZpbGUiOiJvZmZlcnMubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiRhbGZhOiAuNiAhZGVmYXVsdDtcclxuJHVybC1tb2JpbGU6IFwiXCIgIWRlZmF1bHQ7XHJcbiR1cmw6IFwiXCIgIWRlZmF1bHQ7XHJcblxyXG4uYmFyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDQwMHB4O1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDAsIDAsIDAsICRhbGZhKSwgcmdiYSgwLCAwLCAwLCAkYWxmYSkpLCB1cmwoJHVybC1tb2JpbGUpO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcclxuXHJcbiAgICAmX190ZXh0IHtcclxuICAgICAgICBwYWRkaW5nOiAyLjJyZW0gMi4ycmVtO1xyXG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICBib3JkZXI6IDJweCBzb2xpZDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgICAgIGZvbnQtc2l6ZTogMi41cmVtO1xyXG5cclxuICAgICAgICBzdHJvbmcge1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xyXG4gICAgLmJhciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDAsIDAsIDAsICRhbGZhKSwgcmdiYSgwLCAwLCAwLCAkYWxmYSkpLCB1cmwoJHVybCk7XHJcblxyXG4gICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAzLjVyZW0gMXJlbSAzLjVyZW0gMXJlbTtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNC41cmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi5iYXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNDAwcHg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiYSgwLCAwLCAwLCAwLjYpLCByZ2JhKDAsIDAsIDAsIDAuNikpLCB1cmwoXCIuLi9pbWcvY29uaWZlci1tb2JpbGUuanBnXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xufVxuLmJhcl9fdGV4dCB7XG4gIHBhZGRpbmc6IDIuMnJlbSAyLjJyZW07XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyOiAycHggc29saWQ7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAyLjVyZW07XG59XG4uYmFyX190ZXh0IHN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuYmFyIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsIHJnYmEoMCwgMCwgMCwgMC42KSwgcmdiYSgwLCAwLCAwLCAwLjYpKSwgdXJsKFwiLi4vaW1nL2NvbmlmZXIuanBnXCIpO1xuICB9XG4gIC5iYXJfX3RleHQge1xuICAgIHBhZGRpbmc6IDMuNXJlbSAxcmVtIDMuNXJlbSAxcmVtO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGZvbnQtc2l6ZTogNC41cmVtO1xuICB9XG59XG4ud3JhcHBlci1iaWdnZXIsXG4ud3JhcHBlci1zbWFsbGVyIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHdpZHRoOiA4MCU7XG4gIG1heC13aWR0aDogMTMwMHB4O1xufVxuXG4uc2VjdGlvbi1wYWRkaW5nIHtcbiAgcGFkZGluZzogN3JlbSAwO1xufVxuXG4udGl0bGUge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDIuNXJlbTtcbn1cblxuLmJ1dHRvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDFyZW0gNnJlbTtcbiAgd2lkdGg6IGZpdC1jb250ZW50O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkY7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNik7XG4gIGJveC1zaGFkb3c6IDBweCA0cHggNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjYpO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLmJ1dHRvbi0tbmVvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyY2RjNzQ7XG4gIGJveC1zaGFkb3c6IDFweCA0cHggNHB4IDAgcmdiYSg0NCwgMjIwLCAxMTYsIDAuNik7XG4gIGNvbG9yOiAjMDAwO1xufVxuLmJ1dHRvbi0tZGFyay1ncmVlbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyM2FjNWM7XG4gIGNvbG9yOiAjRkZGO1xufVxuLmJ1dHRvbjo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IC0xO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRyYW5zZm9ybTogc2NhbGVYKDApO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiByaWdodDtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3M7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbn1cbi5idXR0b246aG92ZXI6OmFmdGVyIHtcbiAgdHJhbnNmb3JtOiBzY2FsZVgoMSk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQ7XG59XG5cbi5jb2x1bW4tY2VudGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmNvbnRlbnQge1xuICBmbGV4OiAxIDAgYXV0bztcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC53cmFwcGVyLXNtYWxsZXIge1xuICAgIHdpZHRoOiA3MCU7XG4gICAgbWF4LXdpZHRoOiA5NTBweDtcbiAgfVxuICAudGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMy44cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDRyZW07XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLndyYXBwZXItc21hbGxlciB7XG4gICAgd2lkdGg6IDYwJTtcbiAgfVxufVxuaHRtbCxcbmJvZHkge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDYyLjUlO1xuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbiAgc2Nyb2xsLXBhZGRpbmc6IDdyZW07XG59XG5cbmJvZHkge1xuICBmb250LXNpemU6IDJyZW07XG4gIGZvbnQtZmFtaWx5OiBcIlJhbGV3YXlcIiwgc2Fucy1zZXJpZjtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuKixcbio6OmFmdGVyLFxuKjo6YmVmb3JlIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4ubmF2IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiAxMDA7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNS45cmVtO1xufVxuLm5hdl9fYm94IHtcbiAgd2lkdGg6IDEwMCU7XG59XG4ubmF2X19sb2dvIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5uYXZfX2xpc3Qge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDEwMDtcbiAgbGVmdDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGhlaWdodDogY2FsYygxMDB2aCAtIDUuOXJlbSk7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgdHJhbnNpdGlvbjogMC43cyB0cmFuc2Zvcm07XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5uYXZfX2xpc3QtLWFjdGl2ZSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbiAgfVxufVxuLm5hdl9fbGlzdC1pdGVtLWxpbmsge1xuICBoZWlnaHQ6IGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICMwMDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDMuNXJlbSAwO1xuICB3aWR0aDogMTAwJTtcbiAgdHJhbnNpdGlvbjogMC4ycyBjb2xvciwgMC4ycyBiYWNrZ3JvdW5kLWNvbG9yO1xufVxuLm5hdl9fbGlzdC1pdGVtLWxpbms6aG92ZXIge1xuICBjb2xvcjogd2hpdGU7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xufVxuXG4uY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBncmF5O1xufVxuXG4ubmF2LW1hcmdpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDUuOXJlbTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLm5hdiB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGdyYXk7XG4gIH1cbiAgLm5hdl9fYm94IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHdpZHRoOiA4MCU7XG4gIH1cbiAgLm5hdl9fbG9nbyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbiAgLm5hdl9fbG9nby1saW5rIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY29sb3I6ICMwMDA7XG4gICAgZm9udC1zaXplOiAzLjVyZW07XG4gIH1cbiAgLm5hdl9fbG9nby1saW5rIGltZyB7XG4gICAgaGVpZ2h0OiAzLjVyZW07XG4gICAgdmVydGljYWwtYWxpZ246IC01cHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAwLjNyZW07XG4gIH1cbiAgLm5hdl9fbGlzdCB7XG4gICAgcG9zaXRpb246IHN0YXRpYztcbiAgICB3aWR0aDogYXV0bztcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICB0cmFuc2l0aW9uOiBub25lO1xuICB9XG4gIC5uYXZfX2xpc3QtaXRlbS1saW5rIHtcbiAgICB3aWR0aDogMTJyZW07XG4gIH1cbiAgLmNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAubmF2LW1hcmdpbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiA5LjNyZW07XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmJsb2NrLXNjcm9sbCB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxufVxuLmZvb3RlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7XG4gIGZsZXgtc2hyaW5rOiAwO1xufVxuLmZvb3Rlcl9faGVhZGluZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XG4gIGZvbnQtc2l6ZTogMy41cmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uZm9vdGVyX19oZWFkaW5nIGltZyB7XG4gIGhlaWdodDogMy41cmVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogLTVweDtcbiAgbWFyZ2luLXJpZ2h0OiAwLjNyZW07XG59XG4uZm9vdGVyX19ib3gtdGV4dCB7XG4gIG1hcmdpbi1ib3R0b206IDEuMnJlbTtcbiAgY29sb3I6ICMwMDA7XG4gIGZvbnQtc2l6ZTogMi4ycmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5mb290ZXJfX2JveC1saXN0IHtcbiAgbWFyZ2luLWJvdHRvbTogM3JlbTtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbGluZS1oZWlnaHQ6IDEyNSU7XG59XG4uZm9vdGVyX19ib3gtbGlzdC1pdGVtIHtcbiAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xufVxuLmZvb3Rlcl9fYm94LWxpc3QtaXRlbTpsYXN0LW9mLXR5cGUge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuLmZvb3Rlcl9fYm94LWxpc3QtaXRlbS1saW5rIHtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIGNvbG9yOiAjMDAwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIG9wYWNpdHk6IDAuODtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzO1xufVxuLmZvb3Rlcl9fYm94LWxpc3QtaXRlbS1saW5rOmhvdmVyIHtcbiAgb3BhY2l0eTogMTtcbn1cbi5mb290ZXJfX2JveDpsYXN0LW9mLXR5cGUgLmZvb3Rlcl9fYm94LWxpc3Qge1xuICBtYXJnaW46IDA7XG59XG4uZm9vdGVyX19lbmQge1xuICBwYWRkaW5nOiAzcmVtIDAuNXJlbTtcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHNvbGlkO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNjUwcHgpIHtcbiAgLmZvb3Rlcl9faGVhZGluZyB7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgfVxuICAuZm9vdGVyX19jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5mb290ZXJfX3dyYXBwZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB9XG4gIC5mb290ZXJfX2hlYWRpbmcge1xuICAgIG1hcmdpbjogMDtcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gIH1cbiAgLmZvb3Rlcl9fYm94LWxpc3Qge1xuICAgIG1hcmdpbjogMDtcbiAgfVxuICAuZm9vdGVyX19ib3g6bnRoLW9mLXR5cGUoMm4pIHtcbiAgICBtYXJnaW46IDAgOHJlbTtcbiAgfVxuICAuZm9vdGVyX19jb250YWluZXIge1xuICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgfVxufVxuLmNhcmQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiAycmVtIDNyZW07XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm94LXNoYWRvdzogMCAwIDhweCAwIHJnYmEoMCwgMCwgMCwgMC4yKTtcbn1cbi5jYXJkOm50aC1vZi10eXBlKDIpIHtcbiAgbWFyZ2luOiAzcmVtIDA7XG59XG4uY2FyZF9fcHJpY2Uge1xuICBtYXJnaW46IDFyZW0gMDtcbiAgZm9udC1zaXplOiA1cmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5jYXJkX19saXN0IHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xufVxuLmNhcmRfX2xpc3QtaXRlbS0taGFzOjpiZWZvcmUge1xuICBjb250ZW50OiB1cmwoLi4vaW1nL2ljb25zL3RhYmxlci1pY29uLWNoZWNrLnN2Zyk7XG4gIG1hcmdpbi1yaWdodDogMC41cmVtO1xufVxuLmNhcmRfX2xpc3QtaXRlbS0tbm8taGFzIHtcbiAgb3BhY2l0eTogMC42O1xufVxuLmNhcmRfX2xpc3QtaXRlbS0tbm8taGFzOjpiZWZvcmUge1xuICBjb250ZW50OiB1cmwoLi4vaW1nL2ljb25zL3RhYmxlci1pY29uLW1pbnVzLnN2Zyk7XG4gIG1hcmdpbi1yaWdodDogMC41cmVtO1xufVxuLmNhcmRfX2J1dHRvbiB7XG4gIG1hcmdpbi10b3A6IDJyZW07XG59XG5cbi5oMSB7XG4gIHBhZGRpbmc6IDdyZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW46IDA7XG59XG5cbi5hYm91dC1vZmZlciB7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiYSgwLCAwLCAwLCAwLjgpLCByZ2JhKDAsIDAsIDAsIDAuOCkpLCB1cmwoXCIuLi9pbWcvbGVhdmVzLW1vYmlsZS5qcGdcIik7XG4gIGNvbG9yOiAjRkZGO1xufVxuLmFib3V0LW9mZmVyX190ZXh0IHtcbiAgbGluZS1oZWlnaHQ6IDEzNSU7XG59XG5cbi53aHktd2VfX2JveCB7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07XG59XG4ud2h5LXdlX19ib3g6bGFzdC1vZi10eXBlIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbi53aHktd2VfX2JveC10ZXh0IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4ud2h5LXdlX19ib3gtaW1nIHtcbiAgd2lkdGg6IDdyZW07XG4gIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcbn1cblxuLm9mZmVyX190ZXh0IHtcbiAgbWFyZ2luLWJvdHRvbTogNHJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uY2FyZCB7XG4gIG1hcmdpbi1ib3R0b206IDdyZW07XG4gIHBhZGRpbmc6IDNyZW0gNHJlbTtcbn1cbi5jYXJkOmxhc3Qtb2YtdHlwZSB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAud2h5LXdlX19jb250YWluZXIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB9XG4gIC5oMSB7XG4gICAgZm9udC1zaXplOiAzZW07XG4gIH1cbiAgLmFib3V0LW9mZmVyIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsIHJnYmEoMCwgMCwgMCwgMC44KSwgcmdiYSgwLCAwLCAwLCAwLjgpKSwgdXJsKC4uL2ltZy9sZWF2ZXMuanBnKTtcbiAgfVxuICAubmF2X19ib3gge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5vZmZlcl9fYm94IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICB9XG4gIC5vZmZlcl9fY2FyZCB7XG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xuICB9XG4gIC5uYXZfX2JveCB7XG4gICAgd2lkdGg6IDgwJTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDEzODBweCkge1xuICAub2ZmZXJfX2JveCB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xuICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDMsIDFmcik7XG4gICAgZ2FwOiA0cmVtO1xuICB9XG4gIC5jYXJkIHtcbiAgICBtYXJnaW46IDA7XG4gIH1cbn0iLCJAdXNlICdjb2xvcnMnIGFzIGNvbG9ycztcclxuXHJcbi53cmFwcGVyLWJpZ2dlcixcclxuLndyYXBwZXItc21hbGxlciB7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBtYXgtd2lkdGg6IDEzMDBweDtcclxufVxyXG5cclxuLnNlY3Rpb24tcGFkZGluZyB7XHJcbiAgICBwYWRkaW5nOiA3cmVtIDA7XHJcbn1cclxuXHJcbi50aXRsZSB7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbi1ib3R0b206IDIuNXJlbTtcclxufVxyXG5cclxuLmJ1dHRvbiB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB6LWluZGV4OiAwO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwYWRkaW5nOiAxcmVtIDZyZW07XHJcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGNvbG9ycy4kd2hpdGU7XHJcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjYpO1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDRweCA0cHggMCByZ2JhKDAsIDAsIDAsIDAuNik7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgJi0tbmVvbiB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogY29sb3JzLiRncmVlbjtcclxuICAgICAgICBib3gtc2hhZG93OiAxcHggNHB4IDRweCAwIHJnYmEoNDQsIDIyMCwgMTE2LCAwLjYpO1xyXG4gICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgfVxyXG5cclxuICAgICYtLWRhcmstZ3JlZW4ge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGNvbG9ycy4kZGFya2VyLWdyZWVuO1xyXG4gICAgICAgIGNvbG9yOiBjb2xvcnMuJHdoaXRlO1xyXG4gICAgfVxyXG5cclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XHJcbiAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQ7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3M7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJjpob3Zlcjo6YWZ0ZXIge1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGVYKDEpO1xyXG4gICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5jb2x1bW4tY2VudGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG5cclxuLmNvbnRlbnQge1xyXG4gICAgZmxleDogMSAwIGF1dG87XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xyXG4gICAgLndyYXBwZXItc21hbGxlciB7XHJcbiAgICAgICAgd2lkdGg6IDcwJTtcclxuICAgICAgICBtYXgtd2lkdGg6IDk1MHB4O1xyXG4gICAgfVxyXG5cclxuICAgIC50aXRsZSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAzLjhyZW07XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNHJlbTtcclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xyXG4gICAgLndyYXBwZXItc21hbGxlciB7XHJcbiAgICAgICAgd2lkdGg6IDYwJTtcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIGJnYy1pbWFnZSgkdXJsLCAkYWxmYSkge1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsIHJnYmEoMCwgMCwgMCwgJGFsZmEpLCByZ2JhKDAsIDAsIDAsICRhbGZhKSksIHVybCgkdXJsKTtcclxufVxyXG4iLCIkd2hpdGU6ICNGRkY7XHJcbiRibGFjazogIzAwMDtcclxuJGdyZWVuOiAjMmNkYzc0O1xyXG4kZGFya2VyLWdyZWVuOiAjMjNhYzVjOyIsImh0bWwsXHJcbmJvZHkge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG5odG1sIHtcclxuICAgIGZvbnQtc2l6ZTogNjIuNSU7XHJcbiAgICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcclxuICAgIHNjcm9sbC1wYWRkaW5nOiA3cmVtO1xyXG59XHJcblxyXG5ib2R5IHtcclxuICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG5cclxuKixcclxuKjo6YWZ0ZXIsXHJcbio6OmJlZm9yZSB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufSIsIkB1c2UgXCJjb2xvcnNcIiBhcyBjb2xvcnM7XHJcblxyXG4ubmF2IHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHotaW5kZXg6IDEwMDtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogNS45cmVtO1xyXG5cclxuICAgICZfX2JveCB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fbG9nbyB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuXHJcbiAgICAmX19saXN0IHtcclxuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgICAgei1pbmRleDogMTAwO1xyXG4gICAgICAgIGxlZnQ6IDEwMCU7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDUuOXJlbSk7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgICAgICB0cmFuc2l0aW9uOiAwLjdzIHRyYW5zZm9ybTtcclxuXHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgICAgICAgICAmLS1hY3RpdmUge1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi1pdGVtLWxpbmsge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDMuNXJlbSAwO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjpcclxuICAgICAgICAgICAgICAgIDAuMnMgY29sb3IsXHJcbiAgICAgICAgICAgICAgICAwLjJzIGJhY2tncm91bmQtY29sb3I7XHJcblxyXG4gICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBncmF5O1xyXG59XHJcblxyXG4ubmF2LW1hcmdpbiB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGhlaWdodDogNS45cmVtO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcclxuICAgIC5uYXYge1xyXG4gICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBncmF5O1xyXG5cclxuICAgICAgICAmX19ib3gge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19sb2dvIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19sb2dvLWxpbmsge1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgIGNvbG9yOiBjb2xvcnMuJGJsYWNrO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDMuNXJlbTtcclxuXHJcbiAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDMuNXJlbTtcclxuICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiAtNXB4O1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwLjNyZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2xpc3Qge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogc3RhdGljO1xyXG4gICAgICAgICAgICB3aWR0aDogYXV0bztcclxuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBub25lO1xyXG5cclxuICAgICAgICAgICAgJi1pdGVtLWxpbmsge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEycmVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5jb250YWluZXIge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcblxyXG4gICAgLm5hdi1tYXJnaW4ge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGhlaWdodDogOS4zcmVtO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAuYmxvY2stc2Nyb2xsIHtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgfVxyXG59XHJcbiIsIi5mb290ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNDtcclxuICAgIGZsZXgtc2hyaW5rOiAwO1xyXG5cclxuICAgICZfX2hlYWRpbmcge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcclxuICAgICAgICBmb250LXNpemU6IDMuNXJlbTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgIGhlaWdodDogMy41cmVtO1xyXG4gICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogLTVweDtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwLjNyZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2JveCB7XHJcbiAgICAgICAgJi10ZXh0IHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMS4ycmVtO1xyXG4gICAgICAgICAgICBjb2xvcjogIzAwMDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyLjJyZW07XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi1saXN0IHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogM3JlbTtcclxuICAgICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEyNSU7XHJcblxyXG4gICAgICAgICAgICAmLWl0ZW0ge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xyXG5cclxuICAgICAgICAgICAgICAgICY6bGFzdC1vZi10eXBlIHtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICYtbGluayB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjZyZW07XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IC44O1xyXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6bGFzdC1vZi10eXBlIHtcclxuICAgICAgICAgICAgLmZvb3Rlcl9fYm94LWxpc3Qge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2VuZCB7XHJcbiAgICAgICAgcGFkZGluZzogM3JlbSAwLjVyZW07XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCBzb2xpZDtcclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDY1MHB4KSB7XHJcbiAgICAuZm9vdGVyIHtcclxuICAgICAgICAmX19oZWFkaW5nIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDJyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19jb250YWluZXIge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xyXG4gICAgLmZvb3RlciB7XHJcbiAgICAgICAgJl9fd3JhcHBlciB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2hlYWRpbmcge1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgIHdpZHRoOiBmaXQtY29udGVudDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2JveCB7XHJcbiAgICAgICAgICAgICYtbGlzdCB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2JveDpudGgtb2YtdHlwZSgybikge1xyXG4gICAgICAgICAgICBtYXJnaW46IDAgOHJlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2NvbnRhaW5lciB7XHJcbiAgICAgICAgICAgIHdpZHRoOiBmaXQtY29udGVudDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJAdXNlIFwiY29sb3JzXCIgYXMgY29sb3JzO1xyXG5cclxuLmNhcmQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgcGFkZGluZzogMnJlbSAzcmVtO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDhweCAwIHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuXHJcbiAgICAmOm50aC1vZi10eXBlKDIpIHtcclxuICAgICAgICBtYXJnaW46IDNyZW0gMDtcclxuICAgIH1cclxuXHJcbiAgICAmX19wcmljZSB7XHJcbiAgICAgICAgbWFyZ2luOiAxcmVtIDA7XHJcbiAgICAgICAgZm9udC1zaXplOiA1cmVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2xpc3Qge1xyXG4gICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuXHJcbiAgICAgICAgJi1pdGVtLS1oYXM6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IHVybCguLi9pbWcvaWNvbnMvdGFibGVyLWljb24tY2hlY2suc3ZnKTtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwLjVyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLWl0ZW0tLW5vLWhhcyB7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuNjtcclxuXHJcbiAgICAgICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiB1cmwoLi4vaW1nL2ljb25zL3RhYmxlci1pY29uLW1pbnVzLnN2Zyk7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDAuNXJlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19idXR0b24ge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiAgICB9XHJcbn1cclxuIiwiQHVzZSBcImJhclwiIHdpdGggKFxyXG4gICAgJHVybC1tb2JpbGU6IFwiLi4vaW1nL2NvbmlmZXItbW9iaWxlLmpwZ1wiLFxyXG4gICAgJHVybDogXCIuLi9pbWcvY29uaWZlci5qcGdcIlxyXG4pO1xyXG5cclxuQHVzZSBcImNvbG9yc1wiIGFzIGNvbG9ycztcclxuQHVzZSBcImNvbXBvbmVudHNcIiBhcyBjb21wb25lbnRzO1xyXG5AdXNlIFwicmVzZXRcIjtcclxuQHVzZSBcIm5hdlwiO1xyXG5AdXNlIFwiZm9vdGVyXCI7XHJcbkB1c2UgXCJjYXJkXCI7XHJcblxyXG4uaDEge1xyXG4gICAgcGFkZGluZzogN3JlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4uYWJvdXQtb2ZmZXIge1xyXG4gICAgQGluY2x1ZGUgY29tcG9uZW50cy5iZ2MtaW1hZ2UoXCIuLi9pbWcvbGVhdmVzLW1vYmlsZS5qcGdcIiwgMC44KTtcclxuICAgIGNvbG9yOiBjb2xvcnMuJHdoaXRlO1xyXG5cclxuICAgICZfX3RleHQge1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxMzUlO1xyXG4gICAgfVxyXG59XHJcblxyXG4ud2h5LXdlIHtcclxuICAgICZfX2JveCB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcclxuXHJcbiAgICAgICAgJjpsYXN0LW9mLXR5cGUge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi10ZXh0IHtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLWltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA3cmVtO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4ub2ZmZXIge1xyXG4gICAgJl9fdGV4dCB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNHJlbTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5jYXJkIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDdyZW07XHJcbiAgICBwYWRkaW5nOiAzcmVtIDRyZW07XHJcblxyXG4gICAgJjpsYXN0LW9mLXR5cGUge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xyXG4gICAgLndoeS13ZSB7XHJcbiAgICAgICAgJl9fY29udGFpbmVyIHtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuaDEge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogM2VtO1xyXG4gICAgfVxyXG5cclxuICAgIC5hYm91dC1vZmZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDAsIDAsIDAsIDAuOCksIHJnYmEoMCwgMCwgMCwgMC44KSksIHVybCguLi9pbWcvbGVhdmVzLmpwZyk7XHJcbiAgICB9XHJcblxyXG4gICAgLm5hdl9fYm94IHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xyXG4gICAgLm9mZmVyIHtcclxuICAgICAgICAmX19ib3gge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fY2FyZCB7XHJcbiAgICAgICAgICAgIHdpZHRoOiBmaXQtY29udGVudDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLm5hdl9fYm94IHtcclxuICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogMTM4MHB4KSB7XHJcbiAgICAub2ZmZXIge1xyXG4gICAgICAgICZfX2JveCB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIDFmcik7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDMsIDFmcik7XHJcbiAgICAgICAgICAgIGdhcDogNHJlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5jYXJkIHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICB9XHJcbn1cclxuIl19 */
